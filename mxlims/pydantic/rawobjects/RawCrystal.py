# generated by datamodel-codegen:
#   filename:  rawobjects/RawCrystal.json

from __future__ import annotations

from typing import Literal, Optional

from pydantic import Field

from ..core.LogisticalSample import LogisticalSample


class RawCrystal(LogisticalSample):
    """
    Crystal or location for measuring diffraction. Note that crystals are optional and are generally used ONLY where a region, loop, or other LogisticalSample is found to have several crystals during the actual experiment.
    """

    mxlims_type: Literal["Crystal"] = Field(
        "Crystal",
        alias="mxlimsType",
        description="The type of MXLIMS object.",
        title="Mxlims Type",
    )
    comment: Optional[str] = Field(None, description="Comment or annotation.")
