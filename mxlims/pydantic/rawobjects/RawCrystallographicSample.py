# generated by datamodel-codegen:
#   filename:  rawobjects/RawCrystallographicSample.json
#   timestamp: 2025-03-23T15:25:48+00:00

from __future__ import annotations

from typing import Dict, List, Literal, Optional

from pydantic import Field, confloat

from ..core.PreparedSample import PreparedSample
from ..datatypes import CrystalForm, SampleComponent


class RawCrystallographicSample(PreparedSample):
    """
    Crystallographic Sample
    """

    mxlims_type: Literal["CrystallographicSample"] = Field(
        "CrystallographicSample",
        alias="mxlimsType",
        description="The type of MXLIMS object.",
        title="Mxlims Type",
    )
    macromolecule: Optional[SampleComponent] = Field(
        None, description="Macromolecule being studied - main component of the sample"
    )
    components: Optional[List[SampleComponent]] = Field(
        None, description="Other components of Sample", title="Sample components"
    )
    crystal_form: Optional[CrystalForm] = Field(
        None,
        alias="crystalForm",
        description="Crystal form, with unit cell and space group, as determined during processing",
    )
    radiation_sensitivity: Optional[confloat(ge=0.0, le=1.0)] = Field(
        None,
        alias="radiationSensitivity",
        description="Relative radiation sensitivity of sample.",
        title="Radiation Sensitivity",
    )
    identifiers: Optional[Dict[str, str]] = Field(
        None,
        description="Dictionary str:str of contextName: identifier. ContextName will typically refer to a LIMS, database, or web site but could also be e.g. 'smiles' or 'sequence'",
        title="Identifiers",
    )
