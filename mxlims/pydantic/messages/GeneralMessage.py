# generated by datamodel-codegen:
#   filename:  messages/GeneralMessage.json
#   timestamp: 2025-03-23T15:25:48+00:00

from __future__ import annotations

from typing import List, Optional, Union

from pydantic import BaseModel, Field

from ..rawobjects import (
    RawCollectionSweep,
    RawCrystal,
    RawCrystallographicSample,
    RawDewar,
    RawDropRegion,
    RawMxExperiment,
    RawMxProcessing,
    RawPin,
    RawPinPosition,
    RawPlate,
    RawPlateWell,
    RawPuck,
    RawReflectionSet,
    RawShipment,
    RawWellDrop,
)


class GeneralMessage(BaseModel):
    """
    Message containing all possible objects, without JSON content links
    """

    jobs: Optional[List[Union[RawMxProcessing, RawMxExperiment]]] = Field(
        None, description="List of directly contained Jobs.", title="Jobs"
    )
    datasets: Optional[List[Union[RawCollectionSweep, RawReflectionSet]]] = Field(
        None, description="List of directly contained Datasets.", title="Datasets"
    )
    prepared_samples: Optional[List[RawCrystallographicSample]] = Field(
        None,
        alias="preparedSamples",
        description="List of directly contained Prepared Samples.",
        title="Prepared Samples",
    )
    logistical_samples: Optional[
        List[
            Union[
                RawShipment,
                RawDewar,
                RawPlate,
                RawPuck,
                RawPlateWell,
                RawPin,
                RawWellDrop,
                RawPinPosition,
                RawDropRegion,
                RawCrystal,
            ]
        ]
    ] = Field(
        None,
        alias="logisticalSamples",
        description="List of directly contained Logistical Samples.",
        title="Logistical Samples",
    )
