# generated by datamodel-codegen:
#   filename:  messages/GeneralMessage.json

from __future__ import annotations

from typing import List, Optional, Union

from mxlims.pydantic.MxBaseModel import BaseModel

from pydantic import Field

from ..rawobjects.RawCollectionSweep import RawCollectionSweep
from ..rawobjects.RawCrystal import RawCrystal
from ..rawobjects.RawCrystallographicSample import RawCrystallographicSample
from ..rawobjects.RawDewar import RawDewar
from ..rawobjects.RawDropRegion import RawDropRegion
from ..rawobjects.RawMxExperiment import RawMxExperiment
from ..rawobjects.RawMxProcessing import RawMxProcessing
from ..rawobjects.RawPin import RawPin
from ..rawobjects.RawPinPosition import RawPinPosition
from ..rawobjects.RawPlate import RawPlate
from ..rawobjects.RawPlateWell import RawPlateWell
from ..rawobjects.RawPuck import RawPuck
from ..rawobjects.RawReflectionSet import RawReflectionSet
from ..rawobjects.RawShipment import RawShipment
from ..rawobjects.RawWellDrop import RawWellDrop


class GeneralMessage(BaseModel):
    """
    Message containing all possible objects, without JSON content links
    """

    jobs: Optional[List[Union[RawMxProcessing, RawMxExperiment]]] = Field(
        None, description="List of directly contained Jobs.", title="Jobs"
    )
    datasets: Optional[List[Union[RawCollectionSweep, RawReflectionSet]]] = Field(
        None, description="List of directly contained Datasets.", title="Datasets"
    )
    prepared_samples: Optional[List[RawCrystallographicSample]] = Field(
        None,
        alias="preparedSamples",
        description="List of directly contained Prepared Samples.",
        title="Prepared Samples",
    )
    logistical_samples: Optional[
        List[
            Union[
                RawShipment,
                RawDewar,
                RawPlate,
                RawPuck,
                RawPlateWell,
                RawPin,
                RawWellDrop,
                RawPinPosition,
                RawDropRegion,
                RawCrystal,
            ]
        ]
    ] = Field(
        None,
        alias="logisticalSamples",
        description="List of directly contained Logistical Samples.",
        title="Logistical Samples",
    )
