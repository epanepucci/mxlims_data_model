# generated by datamodel-codegen:
#   filename:  datatypes/SampleComponent.json
#   timestamp: 2025-03-23T15:25:48+00:00

from __future__ import annotations

from typing import Dict, Optional

from pydantic import BaseModel, Field


class SampleComponent(BaseModel):
    """
    Component of Sample.
    """

    acronym: Optional[str] = Field(
        None,
        description="Acronym - short synonym of component (e.g. 'lig1'",
        title="Acronym",
    )
    name: Optional[str] = Field(
        None, description="Human readable name of component", title="Name"
    )
    role: Optional[str] = Field(
        None,
        description="Role of component in PreparedSample",
        examples=["solvent", "cryoprotectant", "ligand", "inhibitor", "target"],
        title="Role",
    )
    identifiers: Optional[Dict[str, str]] = Field(
        None,
        description="Dictionary str:str of contextName: identifier. ContextName will typically refer to a LIMS, database, or web site but could also be e.g. 'smiles' or 'sequence'",
        title="Identifiers",
    )
