# generated by datamodel-codegen:
#   filename:  core/MxlimsObject.json

from __future__ import annotations

from typing import Any, Dict, List, Literal, Optional
from uuid import UUID

from mxlims.pydantic.MxBaseModel import BaseModel

from pydantic import Field

from .NamespacedExtension import NamespacedExtension


class MxlimsObject(BaseModel):
    """
    Base object for all MXLIMS objects: Job, Dataset, PreparedSample, and LogisticalSample
    """

    version: Literal["0.5.0"] = Field(
        ..., description="MXLIMS version for current model", title="Version"
    )
    mxlims_type: str = Field(
        ...,
        alias="mxlimsType",
        description="The type of the MXLIMS object. Fixed for each subtype schema",
        title="Mxlims Type",
    )
    uuid: Optional[UUID] = Field(
        None, description="Permanent unique identifier string", title="Uuid"
    )
    namespaced_extensions: Optional[List[NamespacedExtension]] = Field(
        None,
        alias="namespacedExtensions",
        description="List of extensions to metadata, each defined in a NamespacedExtension schema",
        title="Namespaced Extensions",
    )
    extensions: Optional[Dict[str, Any]] = Field(
        None,
        description="Keyword-value dictionary string:Any of extensions. Use is accepted but discouraged",
        title="Extensions",
    )
