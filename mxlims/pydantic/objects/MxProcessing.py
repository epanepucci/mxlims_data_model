# generated by datamodel-codegen:
#   filename:  objects/MxProcessing.json

from __future__ import annotations

from typing import List, Optional

from pydantic import Field

from ..rawobjects.RawMxProcessing import RawMxProcessing
from .CollectionSweep import CollectionSweep
from .ReflectionSet import ReflectionSet


class MxProcessing(RawMxProcessing):
    """
    Crystallography Processing calculation, with typed JSON containment lists
    """

    results: Optional[List[ReflectionSet]] = None
    template_data: Optional[List[ReflectionSet]] = Field(None, alias="templateData")
    reference_data: Optional[List[ReflectionSet]] = Field(None, alias="referenceData")
    input_data: Optional[List[CollectionSweep]] = Field(None, alias="inputData")
    subjobs: Optional[List[MxProcessing]] = None


MxProcessing.model_rebuild()
