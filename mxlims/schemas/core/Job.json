{
    "description": "Base class for MXLIMS Jobs - an experiment or calculation producing Datasets",
    "title": "Job",
    "type": "object",
    "id": "Job.json",
    "allOf": [
        {
            "$ref": "MxlimsObject.json"
        }
    ],
    "$defs": {
        "JobStatus": {
            "enum": [
                "Template",
                "Ready",
                "Running",
                "Completed",
                "Failed",
                "Aborted"
            ],
            "title": "JobStatus",
            "type": "string"
        }
    },
    "properties": {
        "sampleId": {
            "type": "string",
            "format": "uuid",
            "description": "String UUID of the PreparedSample that applies to this Job",
            "title": "Sample Id"
        },
        "logisticalSampleId": {
            "type": "string",
            "format": "uuid",
            "description": "String UUID of LogisticalSample relevant to this Job.",
            "title": "Logistical Sample Id"
        },
        "startedFromId": {
            "type": "string",
            "format": "uuid",
            "description": "String UUID of the Job from which this Job was started.",
            "title": "Started From Id"
        },
        "startTime": {
            "format": "date-time",
            "type": "string",
            "description": "Actual starting time for job or calculation, ",
            "title": "Start Time"
        },
        "endTime": {
            "format": "date-time",
            "type": "string",
            "description": "Actual finishing time for job or calculation, ",
            "title": "End Time"
        },
        "jobStatus": {
            "allOf": [
                {
                    "$ref": "#/$defs/JobStatus"
                }
            ],
            "description": "Status of job - enumerated, ",
            "examples": [
                "Template",
                "Ready",
                "Running",
                "Completed",
                "Failed",
                "Aborted"
            ]
        },
        "inputDataIds": {
            "description": "String UUID of input Datasets for this Job.",
            "items": {
                "type": "string",
                "format": "uuid"
            },
            "title": "Input Data Ids",
            "type": "array"
        },
        "referenceDataIds": {
            "description": "String UUID of reference Datasets for this Job.",
            "items": {
                "type": "string",
                "format": "uuid"
            },
            "title": "Reference Data Ids",
            "type": "array"
        },
        "templateDataIds": {
            "description": "String UUID of template Datasets for this Job.",
            "items": {
                "type": "string",
                "format": "uuid"
            },
            "title": "Template Data Ids",
            "type": "array"
        },
        "subjobs": {
            "description": "List of Jobs started from this job. NB the startedFromId of the jobs must point to this Job.This field allows attached jobs to be contained directly in the JSON fileand allows for constraining job types in subtypes",
            "items": {
                "$ref": "Job.json"
            },
            "title": "Subjobs",
            "type": "array"
        },
        "results": {
            "description": "List of Datasets created from this job. NB the sourceId of the datasets must point to this Job.This field allows result Datasets to be contained directly in the JSON fileand allows for constraining Dataset types in subtypes",
            "items": {
                "$ref": "Dataset.json"
            },
            "title": "Results",
            "type": "array"
        },
        "templateData": {
            "description": "List of Template Datasets used for this job. NB the id of the datasets must match the IDs in templateDataIds.This field allows template Datasets to be contained directly in the JSON fileand allows for constraining Dataset types in subtypes.NB Note that two different specifications of a dataset cannot have the same ID",
            "items": {
                "$ref": "Dataset.json"
            },
            "title": "Template Data",
            "type": "array"
        }
    }
}
